version: '3'

services:
  # Config Server
  config-server:
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    networks:
      - spring-cloud-network
    depends_on:
      - service-registry-eureka

  # Service Registry
  service-registry-eureka:
    container_name: service-registry-eureka
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - spring-cloud-network

  # User MicroService
  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://psql:5432/finance
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8088
    networks:
      - spring-cloud-network
    depends_on:
      - psql
      - zipkin
      - config-server


  # PostgreSQL Service
  psql:
    container_name: psql
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    volumes:
      - psql:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - spring-cloud-network

  # Zipkin Service
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - spring-cloud-network

  # Grafana Service
  grafana:
    build: './user-service/config/grafana'
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    networks:
      monitoring:
        aliases:
          - grafana

  # Prometheus Service
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./user-service/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus

volumes:
  psql:
  grafana:
    driver: local

networks:
  spring-cloud-network:
    driver: bridge
  monitoring: